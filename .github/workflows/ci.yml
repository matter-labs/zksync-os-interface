name: CI

on:
  push:
    branches:
     - main
  pull_request:
# Disabled for now, as we don't want to run CI twice
# merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:

  ############################
  #  Build, format and lint  #
  ############################
  build-format-and-lint:
    runs-on: ubuntu-24.04-github-hosted-32core
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup runner
        uses: ./.github/actions/runner-setup
        with:
          save_cache: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          cache_shared_key: 'build-format-and-lint'

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy (core)
        # Purposefully exclude `portable-atomic` from features as it makes compilation fail in normal environments
        run: cargo clippy --all-targets --features std,serde --workspace -- -D warnings

      - name: Build project
        run: cargo build --all-targets --workspace

  ci-success:
    name: Github Status Check
    runs-on: ubuntu-latest
    if: always() && !cancelled()
    needs:
      [
        build-format-and-lint,
      ]
    steps:
      - name: Status
        run: |
          # This will check all jobs status in the `needs` list, and fail job if one is failed.
          # Since we split prover and core to different flows, this job will be only as Required Status Check in the Pull Request.
          if [[ ${{ contains(join(needs.*.result, ','), 'failure') }} == "true" ]]; then
            echo "Intentionally failing to block PR from merging"
            exit 1
          fi
